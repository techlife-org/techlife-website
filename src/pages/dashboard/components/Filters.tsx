import React, { useState } from 'react';\nimport { Calendar, Filter, Download, RefreshCw } from 'lucide-react';\nimport { DateRange } from '@/types/dashboard';\nimport { format, startOfMonth, endOfMonth, subMonths, startOfYear, endOfYear } from 'date-fns';\n\ninterface FiltersProps {\n  dateRange: DateRange;\n  onDateRangeChange: (dateRange: DateRange) => void;\n  onRefresh: () => void;\n  onExportPDF: () => void;\n  onExportExcel: () => void;\n  isLoading?: boolean;\n}\n\nconst Filters: React.FC<FiltersProps> = ({\n  dateRange,\n  onDateRangeChange,\n  onRefresh,\n  onExportPDF,\n  onExportExcel,\n  isLoading = false\n}) => {\n  const [showDatePicker, setShowDatePicker] = useState(false);\n  const [showExportMenu, setShowExportMenu] = useState(false);\n\n  const formatDate = (date: Date) => {\n    return format(date, 'MMM dd, yyyy');\n  };\n\n  const quickDateRanges = [\n    {\n      label: 'This Month',\n      range: {\n        start: startOfMonth(new Date()),\n        end: endOfMonth(new Date())\n      }\n    },\n    {\n      label: 'Last Month',\n      range: {\n        start: startOfMonth(subMonths(new Date(), 1)),\n        end: endOfMonth(subMonths(new Date(), 1))\n      }\n    },\n    {\n      label: 'Last 3 Months',\n      range: {\n        start: startOfMonth(subMonths(new Date(), 2)),\n        end: endOfMonth(new Date())\n      }\n    },\n    {\n      label: 'This Year',\n      range: {\n        start: startOfYear(new Date()),\n        end: endOfYear(new Date())\n      }\n    }\n  ];\n\n  const handleQuickDateSelect = (range: DateRange) => {\n    onDateRangeChange(range);\n    setShowDatePicker(false);\n  };\n\n  return (\n    <div className=\"bg-white rounded-lg shadow-md p-4 mb-6\">\n      <div className=\"flex flex-col md:flex-row md:items-center md:justify-between space-y-4 md:space-y-0\">\n        {/* Left side - Date Range */}\n        <div className=\"flex items-center space-x-4\">\n          <div className=\"relative\">\n            <button\n              onClick={() => setShowDatePicker(!showDatePicker)}\n              className=\"flex items-center px-4 py-2 bg-blue-50 text-blue-700 rounded-lg hover:bg-blue-100 transition-colors duration-200 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2\"\n            >\n              <Calendar className=\"h-4 w-4 mr-2\" />\n              <span className=\"text-sm font-medium\">\n                {formatDate(dateRange.start)} - {formatDate(dateRange.end)}\n              </span>\n            </button>\n\n            {/* Date Range Dropdown */}\n            {showDatePicker && (\n              <div className=\"absolute top-full left-0 mt-2 w-64 bg-white border border-gray-200 rounded-lg shadow-lg z-10\">\n                <div className=\"p-4\">\n                  <h4 className=\"text-sm font-medium text-gray-700 mb-3\">Quick Select</h4>\n                  <div className=\"space-y-2\">\n                    {quickDateRanges.map((item, index) => (\n                      <button\n                        key={index}\n                        onClick={() => handleQuickDateSelect(item.range)}\n                        className=\"w-full text-left px-3 py-2 text-sm text-gray-600 hover:bg-gray-50 rounded transition-colors duration-150\"\n                      >\n                        {item.label}\n                      </button>\n                    ))}\n                  </div>\n                </div>\n              </div>\n            )}\n          </div>\n\n          <div className=\"flex items-center text-sm text-gray-500\">\n            <Filter className=\"h-4 w-4 mr-1\" />\n            <span>Filters Active</span>\n          </div>\n        </div>\n\n        {/* Right side - Actions */}\n        <div className=\"flex items-center space-x-3\">\n          {/* Refresh Button */}\n          <button\n            onClick={onRefresh}\n            disabled={isLoading}\n            className={`\n              flex items-center px-3 py-2 text-sm font-medium rounded-lg\n              transition-all duration-200 focus:outline-none focus:ring-2 focus:ring-offset-2\n              ${\n                isLoading\n                  ? 'bg-gray-100 text-gray-400 cursor-not-allowed'\n                  : 'bg-gray-50 text-gray-700 hover:bg-gray-100 focus:ring-gray-500'\n              }\n            `}\n          >\n            <RefreshCw className={`h-4 w-4 mr-2 ${isLoading ? 'animate-spin' : ''}`} />\n            Refresh\n          </button>\n\n          {/* Export Dropdown */}\n          <div className=\"relative\">\n            <button\n              onClick={() => setShowExportMenu(!showExportMenu)}\n              className=\"flex items-center px-4 py-2 bg-green-50 text-green-700 rounded-lg hover:bg-green-100 transition-colors duration-200 focus:outline-none focus:ring-2 focus:ring-green-500 focus:ring-offset-2\"\n            >\n              <Download className=\"h-4 w-4 mr-2\" />\n              <span className=\"text-sm font-medium\">Export</span>\n            </button>\n\n            {/* Export Menu */}\n            {showExportMenu && (\n              <div className=\"absolute top-full right-0 mt-2 w-48 bg-white border border-gray-200 rounded-lg shadow-lg z-10\">\n                <div className=\"py-2\">\n                  <button\n                    onClick={() => {\n                      onExportPDF();\n                      setShowExportMenu(false);\n                    }}\n                    className=\"w-full text-left px-4 py-2 text-sm text-gray-700 hover:bg-gray-50 transition-colors duration-150\"\n                  >\n                    <div className=\"flex items-center\">\n                      <div className=\"w-2 h-2 bg-red-500 rounded-full mr-3\"></div>\n                      Export as PDF\n                    </div>\n                  </button>\n                  <button\n                    onClick={() => {\n                      onExportExcel();\n                      setShowExportMenu(false);\n                    }}\n                    className=\"w-full text-left px-4 py-2 text-sm text-gray-700 hover:bg-gray-50 transition-colors duration-150\"\n                  >\n                    <div className=\"flex items-center\">\n                      <div className=\"w-2 h-2 bg-green-500 rounded-full mr-3\"></div>\n                      Export as Excel\n                    </div>\n                  </button>\n                </div>\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n\n      {/* Auto-refresh indicator */}\n      <div className=\"mt-4 pt-3 border-t border-gray-100\">\n        <div className=\"flex items-center justify-between text-xs text-gray-500\">\n          <div className=\"flex items-center\">\n            <div className=\"w-2 h-2 bg-green-400 rounded-full mr-2 animate-pulse\"></div>\n            <span>Auto-refresh every 30 seconds</span>\n          </div>\n          <div>\n            Last updated: {format(new Date(), 'HH:mm:ss')}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Filters;